<beans xmlns="http://www.springframework.org/schema/beans" xmlns:security="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security.xsd">
	<!-- *********************************** -->
	<!-- ** CONTEXT FILE FOR SPRING SECURITY -->
	<!-- ************************************ -->

	<!-- Configure method level security -->
	<security:global-method-security secured-annotations="enabled" />

	<!-- Configure URL interceptors to define authorization application zones -->
	<security:http>
		<!-- Login + Register + Indexes pages and resources are available anonymously -->
		<security:intercept-url pattern="/index.jsp" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/app/login.html" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/app/register.html" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/index.jsp#/login" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/index.jsp#/register" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/services/register" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/app/css/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/app/fonts/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/app/js/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/app/files/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<!-- The prefix "ROLE_" is a marker which indicates that a simple comparison with the userâ€™s authorities should be made -->
		<security:intercept-url pattern="/app/img/**" access="ROLE_STUDENT" />
		<security:intercept-url pattern="/app/js/profile-controller.js" access="ROLE_STUDENT" />
		<security:intercept-url pattern="/app/profile.html" access="ROLE_STUDENT" />
		<security:intercept-url pattern="/index.jsp#/profile" access="ROLE_STUDENT" />
		<security:intercept-url pattern="/app/js/admin-controller.js" access="ROLE_ADMIN" />
		<security:intercept-url pattern="/app/admin.html" access="ROLE_ADMIN" />
		<security:intercept-url pattern="/import.jsp" access="ROLE_ADMIN" />
		<security:intercept-url pattern="/index.jsp#/admin" access="ROLE_ADMIN" />
		<security:intercept-url pattern="/**" access="ROLE_STUDENT" />
		<security:form-login login-page="/index.jsp#/login" login-processing-url="/login" username-parameter="email" password-parameter="password" authentication-failure-handler-ref="clientNotificationAuthenticationFailureHandler"
			authentication-success-handler-ref="clientNotificationAuthenticationSuccessHandler" />
		<security:logout logout-url="/logout" invalidate-session="true" delete-cookies="CHD" success-handler-ref="clientNotificationLogoutSuccessHandler" />
		<!-- Configure Spring Security to detect the submission of an invalid session ID and redirect the user to an appropriate URL -->
		<security:session-management invalid-session-url="/index.jsp#/login" session-authentication-error-url="/index.jsp#/login" session-fixation-protection="newSession">
			<!-- Prevent a user from logging in multiple times - a second login will cause the first to be invalidated -->
			<security:concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
		</security:session-management>
		<!-- Add header to protect against Clickjackking / Enable XSS protection on browser / Content sniffing by browser -->
		<security:headers>
			<security:content-type-options />
			<security:frame-options policy="DENY" />
			<security:xss-protection enabled="true" block="true" />
			<security:cache-control />
		</security:headers>
	</security:http>

	<!-- Configure authentication manager -->
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="dbUserDetailsService">
			<security:password-encoder ref="saltedDigestPasswordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>


</beans>